import os
import json
import pandas as pd

# Dictionary for all Microsoft CVEs
cves = []

def check_cve(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        cve_data = json.load(file)

    # Get the required data parts
    cve_id = cve_data.get('cveMetadata', {}).get('cveId', 'N/A')
    cve_title = cve_data.get('containers', {}).get('cna', {}).get('title', 'N/A')
    publish_date = cve_data.get('cveMetadata', {}).get('datePublished', 'N/A')
    cna_provider = cve_data.get('containers', {}).get('cna', {}).get('providerMetadata', {}).get('shortName', 'N/A')
    
    cwe_id = 'N/A'
    if cve_data.get('containers', {}).get('cna', {}).get('problemTypes'):
        problem_types = cve_data.get('containers', {}).get('cna', {}).get('problemTypes')[0].get('descriptions', [])
        if problem_types:
            cwe_id = problem_types[0].get('cweId', 'N/A')
    
    cvss_score = 'N/A'
    if cve_data.get('containers', {}).get('cna', {}).get('metrics'):
        cvss_metrics = cve_data.get('containers', {}).get('cna', {}).get('metrics')[0]
        if 'cvssV3_1' in cvss_metrics:
            cvss_score = cvss_metrics.get('cvssV3_1', {}).get('baseScore', 'N/A')

    cpe_list = []
    if cve_data.get('containers', {}).get('cna', {}).get('affected'):
        for product in cve_data.get('containers', {}).get('cna', {}).get('affected'):
            if 'cpes' in product:
                cpe_list.extend(product.get('cpes', []))

    cve_info = {
        "CVE ID": cve_id,
        "Title": cve_title,
        "Publish Date": publish_date,
        "CPE": ', '.join(cpe_list) if cpe_list else 'N/A',
        "CVSS": cvss_score,
        "CNA Provider": cna_provider,
        "CWE ID": cwe_id
    }

    cves.append(cve_info)

if __name__ == "__main__":
    # Specify source directory
    src_dir = "./CVElist"

    for dirpath, dirnames, filenames in os.walk(src_dir):
        for filename in filenames:
            src_filepath = os.path.join(dirpath, filename)
            if filename.endswith('.json'):  # Ensure we are only processing JSON files
                check_cve(src_filepath)

    # Convert list of dictionaries to a pandas DataFrame
    df = pd.DataFrame(cves)

    # Write DataFrame to Excel file
    df.to_excel('cves_excel.xlsx', index=False)
